machine: # Define the environment.
  php:
    version: 7.0.20
  node:
    version: 6
  environment:
    # Replace these variables with your own.  Leaving them unset will skip parts of the build (eg: deployment).
    # PSITE: "**REPLACE WITH PANTHEON SITE MACHINE NAME**"
    # PSRCENV: live
    # DOWNSTREAM: "**REPLACE WITH GIT URL**"
    GIT_AUTHOR_NAME: "Last Call Media Automation"
    GIT_AUTHOR_EMAIL: "sysadmin@lastcallmedia.com"

    # These variables probably don't need to be changed.
    PATH: "${HOME}/${CIRCLE_PROJECT_REPONAME}/vendor/bin:${HOME}/${CIRCLE_PROJECT_REPONAME}/node_modules/.bin:$HOME/.composer/vendor/bin:$PATH"
    COMPOSER_EXIT_ON_PATCH_FAILURE: 1
    ARTIFACT_DIRECTORY: "${CIRCLE_ARTIFACTS}"
    IP: $(hostname -I | cut -d' ' -f1)

  pre: # Install a more recent version of Docker to support images created by docker > 1.10.0
    - curl -sSL https://s3.amazonaws.com/circle-downloads/install-circleci-docker.sh | bash -s -- 1.10.0
  services:
    - docker

dependencies: # Install dependencies.
  override:
    - if [ -n "$PSITE" ]; then composer global require pantheon-systems/terminus && terminus login --machine-token=$PMACHINE; fi
    - yarn install
    - gulp install
    - drupal init -n
  cache_directories:
    - "~/.composer/cache"
    - "~/.npm"
    - "~/.bower"
    - "~/.cache/yarn"

database: # Install the Drupal site.  Try to fetch and import a db, then run prepare-site.yml.
  override:
    - cp ci/settings.circle.php web/sites/default/settings.local.php
    - if [ -n "$PSITE" ]; then terminus backup:get "$PSITE.$PSRCENV" --element=db --to=/tmp/db.sql.gz; fi
    - if [ -f /tmp/db.sql.gz ]; then zcat /tmp/db.sql.gz | mysql -u ubuntu circle_test; fi
    - drupal -n chain --file=$(pwd)/ci/prepare-site.yml

test:
  # Perform all testing steps, including static code analysis, unit, and web tests.
  override:
    - gulp build
    - drupal -n server 0.0.0.0:8888:
        background: true
    - drupal -n cache:rebuild all
    - gulp check --junit-dir=$CIRCLE_TEST_REPORTS
    - gulp test --junit-dir=$CIRCLE_TEST_REPORTS --artifact-dir=$CIRCLE_ARTIFACTS --base-url="http://${IP}:8888"

deployment:
  to_master:
    branch: master
    commands:
      - rm -rf vendor/ && composer install --no-dev -o
      - if [ -n "$DOWNSTREAM" ]; then ./ci/scripts/push-to-downstream.sh; fi:
          environment:
            MESSAGE: $(git log --format="%s" -n 1 $CIRCLE_SHA1)
            BRANCH: $CIRCLE_BRANCH

  to_multidev:
    branch: /p-.*/
    commands:
      - rm -rf vendor/ && composer install --no-dev -o
      # If we're pushing to pantheon, ensure that a multidev home exists for this branch.
      - if [ -n "$PSITE" ]; then terminus env:info "$PSITE.$CIRCLE_BRANCH" || terminus env:create "$PSITE.$PSRCENV" $CIRCLE_BRANCH; fi
      - if [ -n "$DOWNSTREAM" ]; then ./ci/scripts/push-to-downstream.sh; fi:
          environment:
            MESSAGE: $(git log --format="%s" -n 1 $CIRCLE_SHA1)
            BRANCH: $CIRCLE_BRANCH
