machine:
  # Define the environment.
  pre:
    # Install a more recent version of Docker to support images created by docker > 1.10.0
    - curl -sSL https://s3.amazonaws.com/circle-downloads/install-circleci-docker.sh | bash -s -- 1.10.0
  php:
    version: 7.0.4
  services:
    - docker
  environment:
    # Add composer and npm binaries to path.
    PATH: "${HOME}/${CIRCLE_PROJECT_REPONAME}/vendor/bin:${HOME}/${CIRCLE_PROJECT_REPONAME}/node_modules/.bin:$HOME/.composer/vendor/bin:$PATH"
    COMPOSER_EXIT_ON_PATCH_FAILURE: 1
    ARTIFACT_DIRECTORY: "${CIRCLE_ARTIFACTS}"

    # Replace these variables with your own.
    PSITE: "**REPLACE WITH PANTHEON SITE MACHINE NAME**"
    PSRCENV: live
    DOWNSTREAM: "**REPLACE WITH PANTHEON GIT URL**"
    GIT_AUTHOR_NAME: "Last Call Media Automation"
    GIT_AUTHOR_EMAIL: "sysadmin@lastcallmedia.com"
    IP: $(hostname -I | cut -d' ' -f1)

dependencies:
  # Install dependencies.
  override:
    # Install and log in using Terminus (requires a machine token in $PMACHINE)
    # - composer global require pantheon-systems/terminus
    # - terminus login --machine-token=$PMACHINE
    - nvm exec npm install
    - nvm exec gulp install
    - drupal init -n
  cache_directories:
    - "~/.composer/cache"
    - "~/.npm"
    - "~/.bower"

database:
  override:
    ## Grab a database from Pantheon and restore it.
    # - cp ci/settings.circle.php web/sites/default/settings.local.php
    # - terminus backup:get "$PSITE.$PSRCENV" --element=db --to=/tmp/db.sql.gz
    # - pushd web/ && zcat /tmp/db.sql.gz | ../vendor/bin/drush sql-cli && popd
    ## Setup stage file proxy so we don't need to grab the files.
    # - vendor/bin/drupal --root=web/ -n chain --uri=http://default --file=../ci/chain/prepare-site.yml
    #
    # OR...
    #
    # Install a fresh copy of Drupal.
    - cp ci/settings.circle.php web/sites/default/settings.local.php
    - vendor/bin/drupal --root=web/ -n chain --uri=http://default --file=../ci/prepare-site.yml

test:
  # Perform all testing steps, including static code analysis, unit, and web tests.
  override:
    - nvm exec gulp build
    - vendor/bin/drupal --root=web/ --uri=http://default -n server 0.0.0.0:8888:
        background: true
    - vendor/bin/drupal --root=web/ --uri=http://default -n cache:rebuild all
    - nvm exec gulp check --junit-dir=$CIRCLE_TEST_REPORTS
    - nvm exec gulp test --junit-dir=$CIRCLE_TEST_REPORTS --artifact-dir=$CIRCLE_ARTIFACTS --base-url="http://${IP}:8888"

# Pantheon Deployment worfklow:
#deployment:
#  # Deployment to any branch matching p-*
#  to_multidev:
#    branch: /p-.*/
#    commands:
#      # Remove dev dependencies and optimize the autoloader.
#      - composer install --no-dev -o
#      # Attempt to create a multidev site for this branch if one doesn't exist.
#      - terminus env:info "$PSITE.$CIRCLE_BRANCH" || terminus env:create "$PSITE.$PSRCENV" $CIRCLE_BRANCH
#      # Push the artifact to Pantheon.
#      - MESSAGE=$(git log --format="%s" -n 1 $CIRCLE_SHA1) ./ci/scripts/push-to-downstream.sh:
#          environment:
#            BRANCH: $CIRCLE_BRANCH
#
#  # Deployment to master
#  to_master:
#    branch: master
#    commands:
#      # Remove dev dependencies and optimize the autoloader.
#      - composer install --no-dev -o
#      - MESSAGE=$(git log --format="%s" -n 1 $CIRCLE_SHA1) ./ci/scripts/push-to-downstream.sh:
#          environment:
#            BRANCH: $CIRCLE_BRANCH


